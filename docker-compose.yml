services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=postgrespw
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
  redis:
    image: redis:latest
    ports:
      - 6379:6379
    command: [ "redis-server", "--appendonly", "yes" ]
    volumes:
      - redis-data:/data
  seq:
    image: datalust/seq:latest
    container_name: ratify.seq
    volumes:
      - seq:/data
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5341:5341"
      - "8081:80"
  notification-service:
    build: 
      context: .
      dockerfile: src/NotificationService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__Redis=redis
      - Serilog__WriteTo__1__Args__serverUrl=http://seq:5341
    ports:
      - "5206:80"
    depends_on:
      - rabbitmq
      - redis
      - seq
  rating-service:
    build: 
      context: .
      dockerfile: src/RatingService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgrespw;Database=ratings
      - Serilog__WriteTo__1__Args__serverUrl=http://seq:5341
    ports:
      - "5205:80"
    depends_on:
      - rabbitmq
      - redis
      - seq
volumes:
  pgdata:
  redis-data:
  seq: